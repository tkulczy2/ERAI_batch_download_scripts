function [Q] = project_complete_data_folder_newclimate(s,a,label,density,latlim,lonlim,varargin)


%
% S. HSIANG
% SMH2137@COLUMBIA.EDU
% 7.11
%
% ---------------------
%
% project_complete_data_folder(s,a, label, density, latlim, lonlim, filename)
%
% arguments:
%           s - structure array from shapefile
%           a - attribute array from shapefile
%           label - string with the name of the attribute used to label
%                   polygons in the shapefile (struct in A)
%           density - 1/resolution used to compute centroid. If population
%                     weighted centroids are of interest, density should be
%                      < 4
%           latlim, lonlim - 2 element vectors with limits of spatial
%                            interest
%           filename - (OPTIONAL) string with the desired path-filename for
%                      output (default uses LABEL, date and time)
%
% PROJECT_COMPLETS_DATA_FOLDER calls functions PROJECT_STATIC_DATA_FOLDER
% and PROJECT_WEATHER_DATA_FOLDER, projecting shapefile data onto real
% world data for statistical analysis. 
%
% Static datasets include centroids, areas and crop planting/harvesting
% dates. The current iteration weights centroids by area, population and
% cropped area (all 2000 est)
%
% Weather datsets can include temperature and precip estimates from the
% Univ. of Deleware and NCEP datasets. Also Australia's Bureau of
% Meterology datasets. Cyclone measures of PDDI and MAXS from LICRICE are
% also projected. Various weather datasets can be omitted by commenting out
% the dataset titles in PROJECT_WEATHER_DATA_FOLDER.
%
% IMPORTING TO STATA:
%   CSV datasets are ready for import to Stata. Upon import call functions:
%       label_centroid_data.ado
%       label_weather_data.ado
%   to label variables for use.   
%
% Notes: 
%   PROJECT_COMPLETE_DATA_FOLDER calls various parallel functions for speed. 
%   Opening a large matlabpool will improve performance. However larger
%   matlabpools require more memory.
%
% See also project_static_data_folder, project_weather_data_folder


%check if running in parellel
check_matlabpool;

%store original location
original_folder = pwd;

%------------CREATING A FOLDER TO PLACE ALL OUTPUT
S = size(varargin);

if S(1) == 1
    %if a filename is specified, make that folder
    foldername = varargin{1};
else
    %if no filename is specified, make a generic folder
    c = clock;
    foldername = ['complete_' label '_' date '_' num2str(c(4)) num2str(c(5))];
end

command = ['mkdir ' foldername];
eval(command)
command = ['cd ' foldername];
eval(command)


project_new_weather_data_folder(s,a,label,'weather_data');

% project_static_data_folder(s,a,label,density, latlim, lonlim, 'static_data');

data_location = pwd;

%------WRITE A STATA .DO FILE  THAT WILL AGGREGATE AND CLEAN THESE DATASETS
filename = 'run_to_clean.do';
fid = fopen(filename,'wt');

fprintf(fid,['cd "' pwd '"' '\n']);
fprintf(fid,['loc unique_id "' label '"' '\n']);
fprintf(fid,['merge_weather_field_static_data, id(`unique_id'') directory(./)' '\n']);
fprintf(fid,['cd ./cleaned' '\n']);
fprintf(fid,['//--------use this section to recover identifying information' '\n']);
fprintf(fid,['//loc first_id ""' '\n']);
fprintf(fid,['//loc second_id ""' '\n']);
fprintf(fid,['//break_var_all_datasets, identifier(`unique_id'') first(`first_id'') second(`second_id'')' '\n']);
fprintf(fid,['//-----------------------------------------------------------'  '\n']);
fprintf(fid,['aggregate_weather_all_datasets,  i(`unique_id'')'  '\n']);
fprintf(fid,[' '  '\n']);
fprintf(fid,['// THIS FILE GENERATED BY: project_complete_data_folder_newclimate.m'  '\n']);

fclose(fid);
%---------------------------------------------





command = ['cd ' original_folder];
eval(command);
Q = true;
return












